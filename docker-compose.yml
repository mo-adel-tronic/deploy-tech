version: '3.8'

services:
  nextjs-app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: nextjs-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mysql://techno223o5nkele4:owkrj3126U*!dqwe22@mysql-db:3306/wwofjr_techno
    networks:
      - app-network
    depends_on:
      - nginx
      - mysql

  mysql:
    image: mysql:8.0
    container_name: mysql-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: geroigjerioQQQ195
      MYSQL_DATABASE: wwofjr_techno
      MYSQL_USER: techno223o5nkele4
      MYSQL_PASSWORD: owkrj3126U*!dqwe22
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro # Optional: for initial schema/data
    networks:
      - app-network
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl/certbot/conf:/etc/letsencrypt:ro
      - ./ssl/certbot/www:/var/www/certbot:ro
    networks:
      - app-network
    depends_on:
      - certbot

  certbot:
    image: certbot/certbot
    container_name: certbot
    restart: "no"
    volumes:
      - ./ssl/certbot/conf:/etc/letsencrypt
      - ./ssl/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  app-network:
    driver: bridge

volumes:
  certbot-conf:
  certbot-www:
  mysql_data:

